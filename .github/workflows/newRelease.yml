# This workflow creates a new release that can be triggered directly from GitHub.
name: New Release

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services: # Start services activeMQ and Postgres-DB

      activemq:
        image: quay.io/artemiscloud/activemq-artemis-broker:latest
        ports:
          - 61616:61616
        env:
          AMQ_USER: admin
          AMQ_PASSWORD: admin

      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres

    steps:
      # Login into GHCR
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Checkout repository
      - uses: actions/checkout@v4
        with:
          # Enables compiling the changelog when creating the new release by fetching the commit-history
          fetch-depth: 0
          # Improves efficiency of this action by only downloading necessary data (see filter option of git clone)
          filter: tree:0

      # Enables the changelog to include the version number of the new release
      - name: Get version number
        id: get_version
        run: |
          version_string=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression='project.version' -q -DforceStdout)
          cut_version=${version_string%"-SNAPSHOT"}
          echo "version=${cut_version}" >> "$GITHUB_OUTPUT"

      # Automatically document commits in Conventional Commit format as changelog, i.e. the version bumps made by Dependabot
      - name: Update Changelog
        uses: orhun/git-cliff-action@v3
        id: git-cliff
        with:
          config: .github/workflows/config/cliff.toml
          args: -v --unreleased --tag ${{steps.get_version.outputs.version}} --prepend CHANGELOG.md
        env:
          OUTPUT: TEMP.md

      # Delete unnecessary file created by the changelog-action that can't be disabled
      - name: Delete TEMP.md
        run: rm TEMP.md

      # The changelog was just generated, which means that there can't be any unreleased changes
      - name: Empty UNRELEASED_CHANGES.md
        run: truncate -s 0 UNRELEASED_CHANGES.md

      # Committing here is necessary for the new release to be created correctly
      - name: Commit Changelog
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: 'chore(doc): update Changelog'
          file_pattern: 'UNRELEASED_CHANGES.md CHANGELOG.md'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          cache: maven
      # configure git for building a new release
      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      # Build the new release
      - name: Create new release
        run: mvn -B  -P '!dockerDeveloperTags' -P integrationTests release:prepare release:perform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
